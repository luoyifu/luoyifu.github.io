---
layout:     post
title:      "从电子病历数据中发现真知——电子病历数据的处理和分析（2）"
subtitle:   "使用LDA方法提取电子病历数据隐含特征"
date:       2018-10-30 22:00:00
author:     "Luo Yifu"
header-img: "img/post-bg-2015.jpg"
tags:
    - 电子病历
    - LDA
    - 自然语言处理
---
# 从电子病历数据中发现真知——电子病历数据的处理和分析（2）——使用LDA方法提取电子病历数据隐含特征
之前将病历数据进行了特征提取。提取方式和数据过滤参考[从电子病历数据中发现真知}()
接下来，会使用LDA算法对具体的特征进行一次抽象特征提取。这样做的原因主要是：
1. 具体特征数量过多（因为我进行的病历特征提取是截取有效信息点，非重复的信息数量较大，1700份病历包含30000左右的特征），因此如果将每个病历根据该特征向量化，病历特征空间会极其稀疏。
2. 不同具体特征之间有可能有相当强的联系，但这种联系在特征中无法发现。通过再一次抽象，试图将这种联系找出来。
3. 基于计算能力的现实考量。

## 选用LDA方法进行电子病历特征再提取
我们采用gensim包实现LDA算法。

### Step1 数据获取并编制词典和语料库
gensim包的基本使用再[自然语言处理与Gensim包]()中已经做了简单的介绍。

'''
# 获取语料仓库中所有.txt文件的名称
filenames_full_path = Text_Treatment.get_full_filename(
    filepath_after_treatment_text_database, '.txt')

# 每个文本存储为一个list（每个特征占一行），text_word_list是所有文本list的list
text_word_list = []
for i in filenames_full_path:
    text_word_list.append(Text_Treatment.read_word_list(i))

# 建立语料特征索引词典，并将文本特征的原始表达转化成词袋模型对应的稀疏向量表达。
dictionary = corpora.Dictionary(text_word_list)

# 构建gensim语料仓库corpus，corpus是基于词袋模型
corpus = []
for text in text_word_list:
    corpus.append(dictionary.doc2bow(text))
'''

### Step2 使用tf-idf方法进一步优化病历数据特征
病历数据的特征中，有些较为普遍，我们认为这种特征所含信息量较少（或者说是患者的共性），所以我们在这一步需要对病历所化的向量使用tf-idf方法，进一步优化病历特征向量的特征。

'''
# tfidf&lsi模型
tfidf_model = models.TfidfModel(corpus)

# 将语料库中所有文档的词转换成tfidf模式
# 相比原本的corpus，tfidf模式的语料库对于词语的重要性有更多的强调。 
corpus_tfidf = tfidf_model[corpus]
'''

### Step3 构建LDA模型
构建LDA模型

'''
# num_topics: 必须。LDA 模型要求用户决定应该生成多少个主题。由于我们的文档集很小，所以我们只生成15个主题。
# id2word：必须。LdaModel 类要求我们之前的 dictionary 把 id 都映射成为字符串。
# passes：可选。模型遍历语料库的次数。遍历的次数越多，模型越精确。但是对于非常大的语料库，遍历太多次会花费很长的时间
EMR_ldamodel = models.ldamodel.LdaModel(corpus_tfidf, num_topics=50, id2word=dictionary, passes=30)
'''

### Step4 将电子病历特征向量转变为LDA分布的特征向量
我们为了提取每个病历的隐含特征因此选用了LDA方法。这一步就是将所有电子病历文档转换称LDA分布主题特征。

'''
# 将所有文档所化为的主题存储在doc_topic中
# 这行代码可以将新的文档转化为LDA主题分布
doc_topic = [a for a in EMR_ldamodel[corpus]]

# 结果输出如下：

# 这是一个输出示例，即编号118的病历是由5，17，41号主题构成的，且每个主题所占比重为0.19，0.06，0.65
>>doc_topic[118]
>>>[(5, 0.19357204), (17, 0.06606043), (41, 0.654913)]
'''

